#!/bin/bash
#PBS -N file1_sc
#PBS -l nodes=1:ppn=4
#PBS -q ihuman_pub
#PBS -l walltime=480:00:00
#PBS -o sc_ec.log 
#PBS -e sc_ec.err 

# Function to calculate Sc
hostname
date
echo RUNNING


# conda activate lluoto_score
source /public/home/liad/anaconda3/bin/activate lluoto_score
WORKDIR=/public/home/liad/lluoto/temp
module load apps/APBS/1.3
# module load apps/chimera/1.17/

# Function to calculate EC

# Example usage


cd ${WORKDIR}
# mpirun -n 20 python test.py
# LD_PRELOAD=/public/home/liwm1/programs/anaconda3/envs/gmx/lib/libmpi.so.12 
# mpirun -np 20 python /public/home/liwm1/projects/lluoto/dockq_soap.py
# wait
# LD_PRELOAD=/public/home/liwm1/programs/anacond
source /public/home/liad/lluoto/ccp4-9/bin/ccp4.setup-sh

pdb_path="/public/home/liad/lluoto/output/lingqi"
# pdb_path="/public/home/liad/lluoto/fix_re"


THREAD=4
MAX_JOBS=40  # Increase this value if needed
job_count=0
echo "start sc_and_ec"



for pdb_data in $pdb_path/*.pdb; do

    if [[ -e "$pdb_data" ]]; then
        (
            sc_file="$pdb_data.txt"
            if [[ -e "$sc_file" ]]; then
                echo 'exist'
            else 
                original_pdb=$(basename $pdb_data)
                sc XYZIN /public/home/liad/lluoto/$original_pdb <<EOF > $sc_file
MOLECULAR 1
CHAIN A
MOLECULAR 2
CHAIN B
PROBE_RADIUS 1.4
END
EOF

                wait
            fi
            sc_score=$(grep "Shape complementarity statistic" "$sc_file" | awk '{print $NF}')
            wait
            base=$(basename $pdb_data)
            prefix=${base%.pdb}
            pqr_name="$prefix.pqr"
            apbs_in="$prefix.in"
            apbs_out="$prefix.pqr.dx"        
            if [[ -e "$apbs_out" ]]; then
                echo 'sc exist'
            else
                # python pdbfix.py
                # wait
                pdb2pqr --noopt --ff AMBER --apbs-input "$apbs_in" "$pdb_data" "$pqr_name"
                wait
                echo "pdb2pqr finished"
                apbs $apbs_in 
                wait
            fi
            # Clean up temporary directory
	        module load apps/chimera/1.17
            python3 /public/home/liad/lluoto/calculate_ec.py --sc "$sc_score" -m "$pqr_name" & wait
            module unload apps/chimera/1.17
            wait
            # rm $sc_file
            # rm $prefix.*
            sleep 5
        ) &
        job_count=$((job_count + 1))
        
        # Limit the number of concurrent jobs
        if [[ $job_count -ge $MAX_JOBS ]]; then
            wait  # Wait for all background jobs to finish
            job_count=0  # Reset the job count
        fi
    fi
done
wait



echo FINISHED
